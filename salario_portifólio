import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    debugShowCheckedModeBanner: false, // Remove o banner "DEBUG"
    home: MyApp(),
    theme: ThemeData(primarySwatch: Colors.green),
  ));
}

class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}

class Aluno {
  late double mensalidade;
  late double desconto;
  late double aluno;
  late double dia;
  late double mensalidadeFinal;
  late double totalDesconto;
  late double juros;

  void setMensalidade(double m) {
    mensalidade = m;
  }

  void setDia(double d) {
    dia = d;
  }

  void setAluno(double a) {
    aluno = a;
  }

  void calcularDesconto() {
    if (aluno == 3) {
      mensalidadeFinal = 0;
      totalDesconto = mensalidade;
      juros = 0;
      return;
    }

    double descontoDia = (dia >= 1 && dia <= 5)
        ? 10
        : (dia >= 6 && dia <= 9)
            ? 5
            : 0;

    double descontoAluno = (aluno == 2) ? 0.50 : 0.00;

    totalDesconto = mensalidade * descontoAluno + mensalidade * (descontoDia / 100);

    double mensalidadeComDesconto =
        mensalidade * (1 - descontoAluno) * (1 - descontoDia / 100);

    juros = (dia > 10) ? (dia - 10) * 0.33 : 0;

    mensalidadeFinal = mensalidadeComDesconto + juros;
  }

  double getMensalidadeFinal() => mensalidadeFinal;
  double getTotalDesconto() => totalDesconto;
  double getJuros() => juros;
}

class _MyAppState extends State<MyApp> {
  final TextEditingController mensalidadeController = TextEditingController();
  final TextEditingController diaController = TextEditingController();

  String tipoAluno = '1';
  double mensalidadeFinal = 0.0;
  double totalDesconto = 0.0;
  double juros = 0.0;
  String mensagem = '';

  final aluno = Aluno();

  void calcularMensalidade() {
    final mensalidade = double.tryParse(mensalidadeController.text);
    final dia = double.tryParse(diaController.text);

    if (mensalidade != null && dia != null) {
      aluno.setMensalidade(mensalidade);
      aluno.setDia(dia);
      aluno.setAluno(double.parse(tipoAluno));
      aluno.calcularDesconto();

      setState(() {
        mensalidadeFinal = aluno.getMensalidadeFinal();
        totalDesconto = aluno.getTotalDesconto();
        juros = aluno.getJuros();
        mensagem = tipoAluno == '3'
            ? 'Você é bolsista integral e não precisa pagar mensalidade!'
            : '';
      });
    } else {
      setState(() {
        mensagem = 'Por favor, preencha todos os campos corretamente.';
      });
    }
  }

  void mostrarInformacoes(BuildContext context) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('Informações'),
          content: SingleChildScrollView(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text('Tipos de Aluno:', style: TextStyle(fontWeight: FontWeight.bold)),
                Text('- Pagante: Paga o valor completo.'),
                Text('- Bolsista Parcial: Recebe 50% de desconto na mensalidade.'),
                Text('- Bolsista Integral: Não paga mensalidade.'),
                SizedBox(height: 10),
                Text('Juros:', style: TextStyle(fontWeight: FontWeight.bold)),
                Text('- Após o dia 10, há R\$0,33 de juros por dia de atraso.'),
                SizedBox(height: 10),
                Text('Descontos:', style: TextStyle(fontWeight: FontWeight.bold)),
                Text('- Pagamento entre os dias 1 e 5: Desconto de 10%.\n- Pagamento entre os dias 6 e 9: Desconto de 5%.'),
              ],
            ),
          ),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.of(context).pop();
              },
              child: Text('Fechar', style: TextStyle(color: Colors.green)),
            ),
          ],
        );
      },
    );
  }

  Widget _buildTextField({
    required TextEditingController controller,
    required String label,
    required String hint,
    TextInputType keyboardType = TextInputType.text,
  }) {
    return TextField(
      controller: controller,
      keyboardType: keyboardType,
      decoration: InputDecoration(
        labelText: label,
        hintText: hint,
        border: OutlineInputBorder(borderRadius: BorderRadius.circular(12)),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Cálculo de Mensalidade'),
        centerTitle: true,
        flexibleSpace: Container(
          decoration: BoxDecoration(
            gradient: LinearGradient(
              colors: [Color(0xFFFFD700), Color(0xFF006400)],
              begin: Alignment.topLeft,
              end: Alignment.bottomRight,
            ),
          ),
        ),
      ),
      body: SingleChildScrollView(
        padding: EdgeInsets.all(16),
        child: Column(
          children: [
            Image.network(
              'https://raw.githubusercontent.com/kaiquePadm/portif-lioDS/main/logo%20salario.png',
              width: 120,
              height: 120,
            ),
            SizedBox(height: 20),
            Text(
              'Calcule sua mensalidade com base no tipo de aluno e no dia do pagamento.',
              textAlign: TextAlign.center,
            ),
            SizedBox(height: 20),
            _buildTextField(
              controller: mensalidadeController,
              label: 'Mensalidade',
              hint: 'Insira o valor da mensalidade',
              keyboardType: TextInputType.number,
            ),
            SizedBox(height: 16),
            _buildTextField(
              controller: diaController,
              label: 'Dia de Pagamento',
              hint: 'Insira o dia do pagamento',
              keyboardType: TextInputType.number,
            ),
            SizedBox(height: 16),
            DropdownButtonFormField<String>(
              value: tipoAluno,
              decoration: InputDecoration(
                labelText: 'Tipo de Aluno',
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(12),
                ),
              ),
              items: [
                DropdownMenuItem(value: '1', child: Text('Pagante')),
                DropdownMenuItem(value: '2', child: Text('Bolsista Parcial')),
                DropdownMenuItem(value: '3', child: Text('Bolsista Integral')),
              ],
              onChanged: (value) {
                setState(() {
                  tipoAluno = value!;
                });
              },
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: calcularMensalidade,
              child: Text('Calcular'),
            ),
            SizedBox(height: 20),
            if (mensalidadeFinal > 0)
              Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text('Mensalidade Final: R\$${mensalidadeFinal.toStringAsFixed(2)}'),
                  Text('Total de Desconto: R\$${totalDesconto.toStringAsFixed(2)}'),
                  Text('Juros: R\$${juros.toStringAsFixed(2)}'),
                ],
              ),
            if (mensagem.isNotEmpty) Text(mensagem),
          ],
        ),
      ),
    );
  }
}
